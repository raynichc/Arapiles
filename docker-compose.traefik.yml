version: "3.7"

services:

  # Website
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    env_file: .env
    networks:
     - web
     - backend
    depends_on:
     - db
     - cms
    labels:
     - "traefik.enable=true"
     - "traefik.http.routers.arapiles-web.rule=Host(`staging.uqmc.org`)"
     - "traefik.http.routers.arapiles-web.entrypoints=web"
     - "traefik.http.routers.arapiles-web.middlewares=redirect@file"
     - "traefik.http.routers.arapiles-secured.rule=Host(`staging.uqmc.org`)"
     - "traefik.http.routers.arapiles-secured.entrypoints=web-secured"
     - "traefik.http.routers.arapiles-secured.tls.certresolver=mytlschallenge"
     - "traefik.http.services.arapiles.loadbalancer.server.port=9000"
    environment:
      WAIT_HOSTS: cms:1337 # Utilise compose-wait (defined in Dockerfile) to wait for TCP connections to be accepted by the CMS on 1337 before attempting to start frontend.

  # Content management system
  cms:
    image: strapi/strapi
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
    networks:
     - backend
     - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms-web.rule=Host(`cms.uqmc.org`)"
      - "traefik.http.routers.cms-web.entrypoints=web"
      - "traefik.http.routers.cms-web.middlewares=redirect@file"
      - "traefik.http.routers.cms-secured.rule=Host(`cms.uqmc.org`)"
      - "traefik.http.routers.cms-secured.entrypoints=web-secured"
      - "traefik.http.routers.cms-secured.tls.certresolver=mytlschallenge"
      - "traefik.http.services.cms.loadbalancer.server.port=1337"

  # Database
  db:
    image: mongo
    restart: unless-stopped
    env_file: .env
    networks:
      - backend
    volumes:
      - db-data:/data/db

volumes:
  # Database persistance
  db-data:

networks:
  web:
    external: true
  backend:
    external: false
